; Generate default file containing DB URIs to test against, if not present.

(rule
  (targets uris.conf)
  (mode fallback)
  (action (write-file %{targets} "sqlite3:test.db?busy_timeout=60000\n")))

; The generic testsuite as a library.

(library
  (name testsuite)
  (wrapped false)
  (modules test_error_cause test_failure test_parallel test_param test_sql)
  (libraries caqti ptime.clock.os testlib))

; Instantiations of the testsuite.

(test
  (name main_blocking)
  (package caqti-dynload)
  (modules main_blocking)
  (libraries
    caqti caqti.blocking caqti-dynload
    alcotest testlib testlib_blocking testsuite)
  (deps (alias drivers) uris.conf)
  (locks /db/testsuite)
  (action (setenv OCAMLPATH . (run %{test}))))

(test
  (name main_async)
  (package caqti-async)
  (modules main_async)
  (libraries
    caqti caqti-dynload caqti-async
    alcotest-async testlib testlib_async testsuite)
  (deps (alias drivers) uris.conf)
  (locks /db/testsuite)
  (action (setenv OCAMLPATH . (run %{test}))))

(test
  (name main_lwt)
  (package caqti-lwt)
  (modules main_lwt)
  (libraries
    caqti caqti-dynload caqti-lwt
    alcotest-lwt testlib testlib_lwt testsuite)
  (deps (alias drivers) uris.conf)
  (locks /db/testsuite)
  (action (setenv OCAMLPATH . (run %{test}))))

; Fake META files for dynamic linking of drivers.

(alias (name drivers))

(alias
  (name drivers)
  (package caqti)
  (deps
    META.caqti
    %{cma:../caqti/lib/caqti}
    ../caqti/lib/caqti.cmxs))
(rule
  (targets META.caqti)
  (deps (:first-dep ../META.caqti))
  (action
   (with-stdout-to %{targets}
    (progn
      (echo "directory = \"../caqti/lib\"\n")
      (cat %{first-dep})))))

(alias
  (name drivers)
  (package caqti-driver-mariadb)
  (deps
    (:first-dep META.caqti-driver-mariadb)
    %{cma:../caqti-driver-mariadb/lib/caqti_driver_mariadb}
    ../caqti-driver-mariadb/lib/caqti_driver_mariadb.cmxs))
(rule
  (targets META.caqti-driver-mariadb)
  (deps (:first-dep ../META.caqti-driver-mariadb))
  (action
   (with-stdout-to %{targets}
    (progn
      (echo "directory = \"../caqti-driver-mariadb/lib\"\n")
      (cat %{first-dep})))))

(alias
  (name drivers)
  (package caqti-driver-sqlite3)
  (deps
    META.caqti-driver-sqlite3
    %{cma:../caqti-driver-sqlite3/lib/caqti_driver_sqlite3}
    ../caqti-driver-sqlite3/lib/caqti_driver_sqlite3.cmxs))
(rule
  (targets META.caqti-driver-sqlite3)
  (deps (:first-dep ../META.caqti-driver-sqlite3))
  (action
   (with-stdout-to %{targets}
    (progn
      (echo "directory = \"../caqti-driver-sqlite3/lib\"\n")
      (cat %{first-dep})))))

(alias
  (name drivers)
  (package caqti-driver-postgresql)
  (deps
    META.caqti-driver-postgresql
    %{cma:../caqti-driver-postgresql/lib/caqti_driver_postgresql}
    ../caqti-driver-postgresql/lib/caqti_driver_postgresql.cmxs))
(rule
  (targets META.caqti-driver-postgresql)
  (deps (:first-dep ../META.caqti-driver-postgresql))
  (action
   (with-stdout-to %{targets}
    (progn
      (echo "directory = \"../caqti-driver-postgresql/lib\"\n")
      (cat %{first-dep})))))
