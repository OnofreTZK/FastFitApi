(lang dune 3.2)
(name dune-configurator)
(version 3.2.0)
(sections (lib .) (libexec .) (doc ../../doc/dune-configurator))
(files
 (lib
  (.private/configurator__Dune_lang.cmi
   .private/configurator__Dune_lang.cmt
   .private/configurator__Dune_lang.cmti
   .private/configurator__Import.cmi
   .private/configurator__Import.cmt
   .private/configurator__Ocaml_config.cmi
   .private/configurator__Ocaml_config.cmt
   .private/configurator__Ocaml_config.cmti
   META
   configurator.a
   configurator.cma
   configurator.cmi
   configurator.cmt
   configurator.cmx
   configurator.cmxa
   configurator.ml
   configurator__.cmi
   configurator__.cmt
   configurator__.cmx
   configurator__.ml
   configurator__Dune_lang.cmx
   configurator__Extract_obj.cmi
   configurator__Extract_obj.cmt
   configurator__Extract_obj.cmti
   configurator__Extract_obj.cmx
   configurator__Import.cmx
   configurator__Ocaml_config.cmx
   configurator__V1.cmi
   configurator__V1.cmt
   configurator__V1.cmti
   configurator__V1.cmx
   dune-package
   dune_lang.ml
   dune_lang.mli
   extract_obj.ml
   extract_obj.mli
   import.ml
   ocaml_config.ml
   ocaml_config.mli
   opam
   v1.ml
   v1.mli))
 (libexec (configurator.cmxs))
 (doc (CHANGES.md LICENSE.md README.md)))
(library
 (name dune-configurator)
 (kind normal)
 (archives (byte configurator.cma) (native configurator.cmxa))
 (plugins (byte configurator.cma) (native configurator.cmxs))
 (native_archives configurator.a)
 (requires unix csexp)
 (main_module_name Configurator)
 (modes byte native)
 (obj_dir (private_dir .private))
 (modules
  (wrapped
   (main_module_name Configurator)
   (modules
    ((name Configurator) (obj_name configurator) (visibility public) (impl))
    ((name Dune_lang)
     (obj_name configurator__Dune_lang)
     (visibility private)
     (impl)
     (intf))
    ((name Extract_obj)
     (obj_name configurator__Extract_obj)
     (visibility public)
     (impl)
     (intf))
    ((name Import)
     (obj_name configurator__Import)
     (visibility private)
     (impl))
    ((name Ocaml_config)
     (obj_name configurator__Ocaml_config)
     (visibility private)
     (impl)
     (intf))
    ((name V1) (obj_name configurator__V1) (visibility public) (impl) (intf)))
   (alias_module
    (name Configurator__)
    (obj_name configurator__)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true)))
 (special_builtin_support (configurator (api_version 1))))
